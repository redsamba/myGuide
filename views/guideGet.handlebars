<h1>GET Request Category Types</h1>
<br>
<article>
  <p>On this page we are going to discuss the different kinds of GET Requests that you can make with this api, what kinds of categories
  they fit under, and what type of data it can return. There are a total of five categories of GET requests: Games, Companies, People,
  Franchises, and Platforms. Each category covers all kinds of relevent data to specific video games, and the companies and individuals 
  who design and distribute those games. We'll primarily cover the kinds of information that is returned in the JSON object, but we will
  also discuss briefly the different types of GET requests that can be made in each category, and cover them in greater detail later in
  the guide.</p>
  <section>
    <h3>Games:</h3>
    <p>
      Of the different types of GET requests that you can make, game requests have the most diverse set of return objects. The following
      is a list of the different types of GET requests you can make in the games category:
      <li>/games: This returns a list of all games in the database.</li>
      <li>/games/meta: This returns the meta data for the games category.</li>
      <li>/games/{gameid}: This returns a game object that matches a given Game's ID number.</li>
      <li>/games/search: This returns a list of games that fit certain query parameters.</li>
    </p>
    <p>
      The JSON object for a games search can differ a bit more than the other categories, but for the most part, each object contains
      similar information, simply more or less of it depending on what type of GET request was made. For our purposes here, the JSON
      object that is returned by the "/games/{gameid}" request has the most diverse range of information options that are returned,
      and will serve as a good representation of what a games category JSON object might look like.
    </p>
    <pre>
      <code>
        {
  "game": {
    "id": 3699,
    "name": "The Settlers II 10th Anniversary",
    "slug": "the-settlers-ii-10th-anniversary",
    "release_date": "2006-09-01",
    "created_at": "2014-01-10 12:44:27 +0000",
    "updated_at": "2015-09-28 06:52:31 +0000",
    "alternative_names": [
      {
        "name": "Die Siedler II: Die n√§chste Generation",
        "comment": "German title"
      }
    ],
    "genres": [
      {
        "name": "Real Time Strategy (RTS)"
      }
    ],
    "themes": [
      {
        "name": "Historical"
      }
    ],
    "release_dates": [
      {
        "platform_name": "Microsoft Windows",
        "release_date": "2006-09-01"
      }
    ],
    "companies": [
      {
        "id": 646,
        "developer": true,
        "publisher": false,
        "name": "Blue Byte Software"
      },
      {
        "id": 3116,
        "developer": true,
        "publisher": false,
        "name": "Funatics Development"
      },
      {
        "id": 104,
        "developer": false,
        "publisher": true,
        "name": "Ubisoft Entertainment"
      }
    ],
    "cover": {
      "url": "//res.cloudinary.com/igdb/image/upload/t_cover_small/mv1i2plavuqumn2strfq.png",
      "width": 1003,
      "height": 1429,
      "id": "mv1i2plavuqumn2strfq"
    }
  }
}
      </code>
    </pre>
    <p>
      The primary things to notice here in the game JSON object, is the game id, name, and release_date. This is the basic info that
      identifies a game and is the most consistently used times of data in the games category responses. Things like genre, companies,
      and themes are actually arrays of JSON objects and you will have to use the proper coding methods to access the data inside of 
      those arrays.
    </p>
  </section>
  <br>
  <section>
    <h3>Companies:</h3>
    <p>
      The companies category, and the rest of the categories on this list, are fairly straight foreward and are very similar to one
      another in terms of how the api handles their different requests. Still, here is a quick list of the different GET requests in
      the companies category:
      <li>/companies: Returns a list of all companies.</li>
      <li>/companies/meta: Returns the meta data for the companies category.</li>
      <li>/companies/{companyid}: Returns a company object that corresponds to the id.</li>
      <li>/companies/{companyid}/games: Returns a list of all the games made by that company.</li>
    </p>
    <p>
      The new type of search here is the last one in the list. With this GET request you do not access any company information 
      directly, but rather a brief list of all the games that a company has made. This type of search is a good way to locate different
      game ids, which can then be used to link a game to its company on your website. Below are two examples of the different types
      of JSON objects that are related to companies. The first is a "/companies/{companyid}" search and shows the kind of data you
      can typically find in a company request, and the second is an example of what a "/companies/{companyid}/games" request can look
      like:
    </p>
    <h4>Company JSON Object:</h4>
    <pre>
      <code>
        {
  "company": {
    "id": 13,
    "name": "Demiurge Studios",
    "slug": "demiurge-studios",
    "average_rating": "8.64974214493147",
    "parent": null
  }
}
      </code>
    </pre>
    <br>
    <pre>
      <code>
        {
  "games": [
    {
      "id": 5716,
      "name": "Advent Rising",
      "slug": "advent-rising",
      "release_date": "2005-05-31"
    },
    {
      "id": 20,
      "name": "BioShock",
      "slug": "bioshock",
      "release_date": "2007-08-21"
    },
    {
      "id": 498,
      "name": "Borderlands",
      "slug": "borderlands",
      "release_date": "2009-10-20"
    },
    {
      "id": 4730,
      "name": "Brothers in Arms: Double Time",
      "slug": "brothers-in-arms-double-time",
      "release_date": "2008-09-23"
    },
    {
      "id": 617,
      "name": "Brothers in Arms: Earned in Blood",
      "slug": "brothers-in-arms-earned-in-blood",
      "release_date": "2005-10-04"
    },
    {
      "id": 619,
      "name": "Brothers in Arms: Road to Hill 30",
      "slug": "brothers-in-arms-road-to-hill-30",
      "release_date": "2005-03-01"
    },
    {
      "id": 2694,
      "name": "Green Day: Rock Band",
      "slug": "green-day-rock-band",
      "release_date": "2010-06-08"
    },
    {
      "id": 7084,
      "name": "Marvel Puzzle Quest",
      "slug": "marvel-puzzle-quest",
      "release_date": "2013-10-03"
    },
    {
      "id": 73,
      "name": "Mass Effect",
      "slug": "mass-effect",
      "release_date": "2007-11-20"
    },
    {
      "id": 13784,
      "name": "Mass Effect: Bring Down the Sky",
      "slug": "mass-effect-bring-down-the-sky",
      "release_date": "2008-03-11"
    },
    {
      "id": 13781,
      "name": "Mass Effect: Pinnacle Station",
      "slug": "mass-effect-pinnacle-station",
      "release_date": "2009-08-25"
    },
    {
      "id": 13105,
      "name": "Puzzle & Glory",
      "slug": "puzzle-and-glory",
      "release_date": "2015-09-24"
    },
    {
      "id": 11643,
      "name": "Shoot Many Robots",
      "slug": "shoot-many-robots",
      "release_date": "2012-03-14"
    },
    {
      "id": 8311,
      "name": "Titan Quest",
      "slug": "titan-quest",
      "release_date": "2006-06-26"
    }
  ]
}
      </code>
    </pre>
  </section>
  
</article>
<br>

<span>
  <a href="http://52.25.239.188:3000/"><--Previous Page<--</a> <a href="https://www.igdb.com/api/v1/documentation">-->Next Page--></a>
</span>
