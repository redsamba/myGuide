<h1>General Requests and Meta Requests</h1>
<article>
  <p>
    In this section of the guide we will finally be able to go forward with actually implementing something useful with the IGDB API. I 
    won't be doing anything too fancy with it, but it should be quite obvious the potential it can have for any website that either buys
    or sells video games, or retains a list of information about video games. Specifically in this section of the guide I will discuss the
    primary GET Request that all of the API Categories have and which how they might be useful. I will also briefly cover the Meta request
    and its usages in conjunction with the General request.
  </p>
  <section>
    <h2>General GET Requests</h2>
    <p>
      I call it the General Request, simply because of how vague and all encompassing it can be as a data retrieval method. Simply put,
      when this particular request gets made, all items within a given API category are returned in a large JSON Object. The typical
      notation for the request is simply a "/{category}" placed within the url string, where "{category}" is one of the five main data
      categories that the database uses to organize its information. So let say I make the following request:
    </p>
    <span>https://www.igdb.com/api/v1/franchises?token={!insert api key here!}</span>
    <p>
      In this particular query, we are simply requesting that a list of all franchises be returned as a JSON Object, along with all of the
      pertinent data that it contains. The one caviet to this particular request, however, is that it can only return a maximum of 25 
      franchise objects within the response object. So if you have a thousand franchises in the list, you would only be able to access
      the first 25 of them, and by default they are ordered by there name value alphanumerically. In order to traverse the whole list
      of objects, you would need to ensure that you set the offset parameter. The offset parameter simply tells where to start the 
      retrieval of the list inside of the franchise database. So if I wanted to start in the middle of the list, and the list has a 
      total of 1000 objects in it, then I would need to set the offset parameter to 499 (the general object returned contains an object
      called franchises, which is itself an array of franchise objects. So you will need to work with the appropriate array index to get
      to the place where you want to start.)
    </p>
    <span>https://www.igdb.com/api/v1/franchises?limit=10&offset=499token={!insert api key here!}</span>
    <p>
      As you can see above the offset parameter is set to 499, but there is also a limit parameter as well. The limit parameter is a
      useful parameter for a general request, because it can limit the number of objects that are returned to you. So in the above
      example you have 10 franchise objects that are returned with the GET request, and you start at the 501st franchise. The important
      thing to remember about the limit and offset parameters, is that if you are having to retreive all 500 franchise objects in total,
      you would have to set up some kind of loop that would take 50 total requests. As a side note, the largest limit size (and also 
      default size of the request) is 25.
    </p>
  </section>
</article>
